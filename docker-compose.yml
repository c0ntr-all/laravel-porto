services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: php-app
        volumes:
            - ./laravel:/var/www/laravel
            - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
        networks:
            - app-network
        environment:
            - PHP_OPCACHE_VALIDATE_TIMESTAMPS=1
            - PHP_OPCACHE_MEMORY_CONSUMPTION=128
        restart: unless-stopped
        depends_on:
            - mysql
            - redis

    mysql:
        image: mysql:8.2
        container_name: mysql-db
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: root_password
            MYSQL_DATABASE: home_portal_v2
            MYSQL_USER: app_user
            MYSQL_PASSWORD: app_password
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: redis-cache
        restart: always
        ports:
            - "6379:6379"
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 3s
            retries: 5

    nginx:
        image: nginx:alpine
        container_name: nginx-web
        restart: always
        ports:
            - "80:80"
        volumes:
            - ./laravel:/var/www/laravel
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
        networks:
            - app-network
        depends_on:
            - app

    go-service:
        build:
            context: ./go-microservice
            dockerfile: Dockerfile
        ports:
            - "8080:8080" # HTTP API
        volumes:
            - ./go-microservice:/app
        environment:
            - RABBITMQ_URL=amqp://user:pass@rabbitmq:5672/
            - REDIS_ADDR=redis:6379
        depends_on:
            rabbitmq:
                condition: service_healthy
            redis:
                condition: service_healthy
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
            interval: 30s
            timeout: 10s
            retries: 3

    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            RABBITMQ_DEFAULT_USER: user
            RABBITMQ_DEFAULT_PASS: pass
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
            - ./docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
            - ./docker/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
        healthcheck:
            test: ["CMD", "rabbitmq-diagnostics", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5

    grafana:
        image: grafana/grafana
        ports:
            - "3000:3000"

#    quasar:
#        build:
#            context: .
#            dockerfile: ./docker/client/Dockerfile
#        ports:
#            - "8080:80"
#        networks:
#            - app-network

volumes:
    mysql_data:
    rabbitmq_data:

networks:
    app-network:
        driver: bridge